{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// your initial status data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStatusData = {\n  'Assigned': {\n    name: 'Assigned',\n    items: []\n  },\n  'In Progress': {\n    name: 'In Progress',\n    items: []\n  },\n  'Completed': {\n    name: 'Completed',\n    items: []\n  }\n};\nconst App = () => {\n  _s();\n  const [statusData, setStatusData] = useState(initialStatusData);\n  const onDragEnd = result => {\n    // logic for updating your state based on drag and drop result\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: Object.entries(statusData).map((_ref, index) => {\n      let [status, data] = _ref;\n      return /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: status,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            margin: '0 10px',\n            backgroundColor: 'white',\n            width: 250\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"FbpEOBEFtG/AdQR+JrNroU/gizA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialStatusData","name","items","App","_s","statusData","setStatusData","onDragEnd","result","children","Object","entries","map","_ref","index","status","data","droppableId","provided","ref","innerRef","droppableProps","style","margin","backgroundColor","width","fileName","_jsxFileName","lineNumber","columnNumber","item","draggableId","id","draggableProps","dragHandleProps","content","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// your initial status data\r\nconst initialStatusData = {\r\n    'Assigned': { name: 'Assigned', items: [] },\r\n    'In Progress': { name: 'In Progress', items: [] },\r\n    'Completed': { name: 'Completed', items: [] },\r\n};\r\n\r\nconst App = () => {\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n\r\n    const onDragEnd = (result) => {\r\n        // logic for updating your state based on drag and drop result\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            {Object.entries(statusData).map(([status, data], index) => (\r\n                <Droppable droppableId={status} key={status}>\r\n                    {(provided) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            style={{ margin: '0 10px', backgroundColor: 'white', width: 250 }}\r\n                        >\r\n                            <h3>{data.name}</h3>\r\n                            {data.items.map((item, index) => (\r\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            ))}\r\n        </DragDropContext>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAG;EACtB,UAAU,EAAE;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAG,CAAC;EAC3C,aAAa,EAAE;IAAED,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAG,CAAC;EACjD,WAAW,EAAE;IAAED,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAG;AAChD,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACM,iBAAiB,CAAC;EAE/D,MAAMO,SAAS,GAAIC,MAAM,IAAK;IAC1B;EAAA,CACH;EAED,oBACIT,OAAA,CAACJ,eAAe;IAACY,SAAS,EAAEA,SAAU;IAAAE,QAAA,EACjCC,MAAM,CAACC,OAAO,CAACN,UAAU,CAAC,CAACO,GAAG,CAAC,CAAAC,IAAA,EAAiBC,KAAK;MAAA,IAArB,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAAH,IAAA;MAAA,oBAC3Cd,OAAA,CAACH,SAAS;QAACqB,WAAW,EAAEF,MAAO;QAAAN,QAAA,EACzBS,QAAQ,iBACNnB,OAAA;UACIoB,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAC3BC,KAAK,EAAE;YAAEC,MAAM,EAAE,QAAQ;YAAEC,eAAe,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAI,CAAE;UAAAhB,QAAA,gBAElEV,OAAA;YAAAU,QAAA,EAAKO,IAAI,CAACf;UAAI;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACnBb,IAAI,CAACd,KAAK,CAACU,GAAG,CAAC,CAACkB,IAAI,EAAEhB,KAAK,kBACxBf,OAAA,CAACF,SAAS;YAAekC,WAAW,EAAED,IAAI,CAACE,EAAG;YAAClB,KAAK,EAAEA,KAAM;YAAAL,QAAA,EACtDS,QAAQ,iBACNnB,OAAA;cACIoB,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GACnBF,QAAQ,CAACe,cAAc;cAAA,GACvBf,QAAQ,CAACgB,eAAe;cAAAzB,QAAA,EAE3BqB,IAAI,CAACK;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UACR,GATWC,IAAI,CAACE,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUZ,CACd,CAAC,EACDX,QAAQ,CAACkB,WAAW;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MACR,GAvBgCd,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBhC,CAAC;IAAA,CACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE1B,CAAC;AAACzB,EAAA,CAtCID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}