{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Project = () => {\n  _s();\n  const initialStatusData = {\n    'Assigned': {\n      name: 'Assigned',\n      items: []\n    },\n    'In Progress': {\n      name: 'In Progress',\n      items: []\n    },\n    'Completed': {\n      name: 'Completed',\n      items: []\n    }\n  };\n  const [statusData, setStatusData] = useState(initialStatusData);\n  const [tasksData, setTasksData] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/tasks`).then(response => {\n      setStatusData(response.data);\n    }).catch(error => {\n      alert(error);\n    });\n  });\n  const onDragEnd = result => {};\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: Object.entries(statusData).map((_ref, index) => {\n      let [status, data] = _ref;\n      return /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: status,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            margin: '0 10px',\n            backgroundColor: 'white',\n            width: 250\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"64MzUunjYSPgQnkbku4iOV1uYng=\");\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Project","_s","initialStatusData","name","items","statusData","setStatusData","tasksData","setTasksData","axios","get","process","env","REACT_APP_API_BASE_URL","then","response","data","catch","error","alert","onDragEnd","result","children","Object","entries","map","_ref","index","status","droppableId","provided","ref","innerRef","droppableProps","style","margin","backgroundColor","width","fileName","_jsxFileName","lineNumber","columnNumber","item","draggableId","id","draggableProps","dragHandleProps","content","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nexport const Project = () => {\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n    const [tasksData, setTasksData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/tasks`)\r\n            .then(response => {\r\n                setStatusData(response.data)\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n\r\n    })\r\n\r\n    const onDragEnd = (result) => {\r\n\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            {Object.entries(statusData).map(([status, data], index) => (\r\n                <Droppable droppableId={status} key={status}>\r\n                    {(provided) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            style={{ margin: '0 10px', backgroundColor: 'white', width: 250 }}\r\n                        >\r\n                            <h3>{data.name}</h3>\r\n                            {data.items.map((item, index) => (\r\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            ))}\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}