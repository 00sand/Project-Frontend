{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Project = () => {\n  _s();\n  const initialStatusData = {\n    'Assigned': {\n      name: 'Assigned',\n      items: []\n    },\n    'In Progress': {\n      name: 'In Progress',\n      items: []\n    },\n    'Completed': {\n      name: 'Completed',\n      items: []\n    }\n  };\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [statusData, setStatusData] = useState(initialStatusData);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects`).then(response => {\n      setProject(response.data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      console.log('API Response:', response.data); // Check the data received from the API\n\n      const tasksByStatus = response.data.tasks.reduce((acc, task) => {\n        const statusCategory = task.statusCategory.statusName;\n        if (!acc[statusCategory]) {\n          acc[statusCategory] = {\n            name: statusCategory,\n            items: []\n          };\n        }\n        acc[statusCategory].items.push(task);\n        return acc;\n      }, {\n        ...initialStatusData\n      });\n      console.log('Processed Data:', tasksByStatus); // Check the data after processing\n      setStatusData(tasksByStatus);\n\n      // Adding this log to check the current statusData state after updating it\n      console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\n    }).catch(error => {\n      console.log('Error:', error);\n    });\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId !== destination.droppableId) {\n      // Move item to a different droppable\n      const sourceItems = Array.from(statusData[source.droppableId].items);\n      const [movedItem] = sourceItems.splice(source.index, 1);\n      const destinationItems = Array.from(statusData[destination.droppableId].items);\n      destinationItems.splice(destination.index, 0, movedItem);\n      setStatusData({\n        ...statusData,\n        [source.droppableId]: {\n          ...statusData[source.droppableId],\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...statusData[destination.droppableId],\n          items: destinationItems\n        }\n      });\n\n      // Update the status of the moved task in the backend\n      const taskId = movedItem.taskId;\n      const newStatusCategoryId = destination.droppableId === 'Assigned' ? 1 : destination.droppableId === 'In Progress' ? 2 : 3;\n      axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${newStatusCategoryId}`).then(response => {\n        console.log('Status updated:', response.data);\n      }).catch(error => console.error(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: Object.entries(statusData).map((_ref, index) => {\n        let [status, data] = _ref;\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              margin: '0 10px',\n              backgroundColor: 'white',\n              width: 250\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `${status}-${index}`,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/task/${item.taskId}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.taskDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 45\n              }, this)\n            }, `${status}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Project, \"9wKghdsNJb/iTe2hTz4t3eNm1cg=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Link","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","_s","initialStatusData","name","items","id","project","setProject","statusData","setStatusData","get","process","env","REACT_APP_API_BASE_URL","then","response","data","catch","error","console","headers","localStorage","getItem","log","tasksByStatus","tasks","reduce","acc","task","statusCategory","statusName","push","onDragEnd","result","source","destination","droppableId","sourceItems","Array","from","movedItem","splice","index","destinationItems","taskId","newStatusCategoryId","put","children","Object","entries","map","_ref","status","provided","ref","innerRef","droppableProps","style","margin","backgroundColor","width","fileName","_jsxFileName","lineNumber","columnNumber","item","draggableId","draggableProps","dragHandleProps","to","title","taskDetails","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const Project = () => {\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const { id } = useParams();\r\n    const [project, setProject] = useState(null);\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects`)\r\n            .then(response => {\r\n                setProject(response.data);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log('API Response:', response.data); // Check the data received from the API\r\n\r\n                const tasksByStatus = response.data.tasks.reduce((acc, task) => {\r\n                    const statusCategory = task.statusCategory.statusName;\r\n                    if (!acc[statusCategory]) {\r\n                        acc[statusCategory] = { name: statusCategory, items: [] };\r\n                    }\r\n                    acc[statusCategory].items.push(task);\r\n                    return acc;\r\n                }, { ...initialStatusData });\r\n\r\n                console.log('Processed Data:', tasksByStatus); // Check the data after processing\r\n                setStatusData(tasksByStatus);\r\n\r\n                // Adding this log to check the current statusData state after updating it\r\n                console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error:', error);\r\n            });\r\n    }, []);\r\n\r\n    const onDragEnd = (result) => {\r\n        const { source, destination } = result;\r\n        if (!destination) return;\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            // Move item to a different droppable\r\n            const sourceItems = Array.from(statusData[source.droppableId].items);\r\n            const [movedItem] = sourceItems.splice(source.index, 1);\r\n            const destinationItems = Array.from(statusData[destination.droppableId].items);\r\n            destinationItems.splice(destination.index, 0, movedItem);\r\n\r\n            setStatusData({\r\n                ...statusData,\r\n                [source.droppableId]: {\r\n                    ...statusData[source.droppableId],\r\n                    items: sourceItems,\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...statusData[destination.droppableId],\r\n                    items: destinationItems,\r\n                },\r\n            });\r\n\r\n            // Update the status of the moved task in the backend\r\n            const taskId = movedItem.taskId;\r\n            const newStatusCategoryId = destination.droppableId === 'Assigned' ? 1 : destination.droppableId === 'In Progress' ? 2 : 3;\r\n            axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${newStatusCategoryId}`)\r\n                .then(response => {\r\n                    console.log('Status updated:', response.data);\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                {Object.entries(statusData).map(([status, data], index) => (\r\n                    <Droppable droppableId={status} key={status}>\r\n                        {(provided) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                style={{ margin: '0 10px', backgroundColor: 'white', width: 250 }}\r\n                            >\r\n                                <h3>{data.name}</h3>\r\n                                {data.items.map((item, index) => (\r\n                                    <Draggable key={`${status}-${index}`} draggableId={`${status}-${index}`} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                <Link to={`/task/${item.taskId}`}>\r\n                                                    <p>{item.title}</p>\r\n                                                    <p>{item.taskDetails}</p>\r\n                                                </Link>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                ))}\r\n            </DragDropContext>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}