{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\";\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport DND_StatusColumn from './DND_StatusColumn';\nvar STATUS_MAPPINGS = {\n  'Assigned': 1,\n  'In Progress': 2,\n  'Completed': 3\n};\nexport var Project = function Project() {\n  var initialStatusData = {\n    'Assigned': {\n      name: 'Assigned',\n      items: []\n    },\n    'In Progress': {\n      name: 'In Progress',\n      items: []\n    },\n    'Completed': {\n      name: 'Completed',\n      items: []\n    }\n  };\n  var _useParams = useParams(),\n    id = _useParams.id;\n  var _useState = useState(initialStatusData),\n    _useState2 = _slicedToArray(_useState, 2),\n    statusData = _useState2[0],\n    setStatusData = _useState2[1];\n  useEffect(function () {\n    axios.get(\"\".concat(process.env.REACT_APP_API_BASE_URL, \"/projects/\").concat(id), {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n      }\n    }).then(function (response) {\n      console.log('API Response:', response.data); // Check the data received from the API\n\n      var tasksByStatus = response.data.tasks.reduce(function (acc, task) {\n        var statusCategory = task.statusCategory.statusName;\n        if (!acc[statusCategory]) {\n          acc[statusCategory] = {\n            name: statusCategory,\n            items: []\n          };\n        }\n        acc[statusCategory].items.push(task);\n        return acc;\n      }, _objectSpread({}, initialStatusData));\n      console.log('Processed Data:', tasksByStatus); // Check the data after processing\n      setStatusData(tasksByStatus);\n\n      // Adding this log to check the current statusData state after updating it\n      console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\n    }).catch(function (error) {\n      console.log('Error:', error);\n    });\n  }, []);\n  var onDragEnd = function onDragEnd(result) {\n    var source = result.source,\n      destination = result.destination;\n    if (!destination) return;\n    if (source.droppableId !== destination.droppableId) {\n      var _objectSpread2;\n      // Move item to a different droppable\n      var sourceItems = Array.from(statusData[source.droppableId].items);\n      var _sourceItems$splice = sourceItems.splice(source.index, 1),\n        _sourceItems$splice2 = _slicedToArray(_sourceItems$splice, 1),\n        movedItem = _sourceItems$splice2[0];\n      var destinationItems = Array.from(statusData[destination.droppableId].items);\n      destinationItems.splice(destination.index, 0, movedItem);\n      setStatusData(_objectSpread({}, statusData, (_objectSpread2 = {}, _defineProperty(_objectSpread2, source.droppableId, _objectSpread({}, statusData[source.droppableId], {\n        items: sourceItems\n      })), _defineProperty(_objectSpread2, destination.droppableId, _objectSpread({}, statusData[destination.droppableId], {\n        items: destinationItems\n      })), _objectSpread2)));\n\n      // Update the status of the moved task in the backend\n      var taskId = movedItem.taskId;\n      var newStatusCategoryId = STATUS_MAPPINGS;\n      axios.put(\"\".concat(process.env.REACT_APP_API_BASE_URL, \"/tasks/\").concat(taskId, \"/status/\").concat(STATUS_MAPPINGS[destination.droppableId]), {}, {\n        headers: {\n          'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n        }\n      }).then(function (response) {\n        console.log('Status updated:', response.data);\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, Object.entries(statusData).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      status = _ref2[0],\n      data = _ref2[1];\n    return /*#__PURE__*/React.createElement(DND_StatusColumn, {\n      status: status,\n      data: data,\n      key: status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/addtask/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Add Task\"))));\n};","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Link","useParams","axios","DND_StatusColumn","STATUS_MAPPINGS","Project","initialStatusData","name","items","_useParams","id","_useState","_useState2","_slicedToArray","statusData","setStatusData","get","concat","process","env","REACT_APP_API_BASE_URL","headers","localStorage","getItem","then","response","console","log","data","tasksByStatus","tasks","reduce","acc","task","statusCategory","statusName","push","_objectSpread","catch","error","onDragEnd","result","source","destination","droppableId","_objectSpread2","sourceItems","Array","from","_sourceItems$splice","splice","index","_sourceItems$splice2","movedItem","destinationItems","_defineProperty","taskId","newStatusCategoryId","put","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","_ref2","status","key","to"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport DND_StatusColumn from './DND_StatusColumn';\r\n\r\nconst STATUS_MAPPINGS = {\r\n    'Assigned': 1,\r\n    'In Progress': 2,\r\n    'Completed': 3\r\n};\r\n\r\nexport const Project = () => {\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const { id } = useParams();\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log('API Response:', response.data); // Check the data received from the API\r\n\r\n                const tasksByStatus = response.data.tasks.reduce((acc, task) => {\r\n                    const statusCategory = task.statusCategory.statusName;\r\n                    if (!acc[statusCategory]) {\r\n                        acc[statusCategory] = { name: statusCategory, items: [] };\r\n                    }\r\n                    acc[statusCategory].items.push(task);\r\n                    return acc;\r\n                }, { ...initialStatusData });\r\n\r\n                console.log('Processed Data:', tasksByStatus); // Check the data after processing\r\n                setStatusData(tasksByStatus);\r\n\r\n                // Adding this log to check the current statusData state after updating it\r\n                console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error:', error);\r\n            });\r\n    }, []);\r\n\r\n    const onDragEnd = (result) => {\r\n        const { source, destination } = result;\r\n        if (!destination) return;\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            // Move item to a different droppable\r\n            const sourceItems = Array.from(statusData[source.droppableId].items);\r\n            const [movedItem] = sourceItems.splice(source.index, 1);\r\n            const destinationItems = Array.from(statusData[destination.droppableId].items);\r\n            destinationItems.splice(destination.index, 0, movedItem);\r\n\r\n            setStatusData({\r\n                ...statusData,\r\n                [source.droppableId]: {\r\n                    ...statusData[source.droppableId],\r\n                    items: sourceItems,\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...statusData[destination.droppableId],\r\n                    items: destinationItems,\r\n                },\r\n            });\r\n\r\n            // Update the status of the moved task in the backend\r\n            const taskId = movedItem.taskId;\r\n            const newStatusCategoryId = STATUS_MAPPINGS;\r\n            axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${STATUS_MAPPINGS[destination.droppableId]}`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log('Status updated:', response.data);\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            {Object.entries(statusData).map(([status, data]) => (\r\n                <DND_StatusColumn status={status} data={data} key={status} />\r\n            ))}\r\n            <Link to={`/addtask/${id}`}>\r\n                <div>\r\n                    <button>Add Task</button>\r\n                </div>\r\n            </Link>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}