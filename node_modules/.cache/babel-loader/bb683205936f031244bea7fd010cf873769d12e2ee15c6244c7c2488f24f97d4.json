{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport DND_StatusColumn from './DND_StatusColumn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS_MAPPINGS = {\n  'Assigned': 1,\n  'In Progress': 2,\n  'Completed': 3\n};\nexport const Project = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [projectDetails, setProjectDetails] = useState((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.projectDetails);\n  const initialStatusData = {\n    'Assigned': {\n      name: 'Assigned',\n      items: []\n    },\n    'In Progress': {\n      name: 'In Progress',\n      items: []\n    },\n    'Completed': {\n      name: 'Completed',\n      items: []\n    }\n  };\n  const {\n    id\n  } = useParams();\n  const [statusData, setStatusData] = useState(initialStatusData);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setProjectDetails(response.data);\n      console.log('API Response:', response.data); // Check the data received from the API\n\n      const tasksByStatus = response.data.tasks.reduce((acc, task) => {\n        const statusCategory = task.statusCategory.statusName;\n        if (!acc[statusCategory]) {\n          acc[statusCategory] = {\n            name: statusCategory,\n            items: []\n          };\n        }\n        acc[statusCategory].items.push(task);\n        return acc;\n      }, {\n        ...initialStatusData\n      });\n      console.log('Processed Data:', tasksByStatus); // Check the data after processing\n      setStatusData(tasksByStatus);\n\n      // Adding this log to check the current statusData state after updating it\n      console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\n    }).catch(error => {\n      console.log('Error:', error);\n    });\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId !== destination.droppableId) {\n      // Move item to a different droppable\n      const sourceItems = Array.from(statusData[source.droppableId].items);\n      const [movedItem] = sourceItems.splice(source.index, 1);\n      const destinationItems = Array.from(statusData[destination.droppableId].items);\n      destinationItems.splice(destination.index, 0, movedItem);\n      setStatusData({\n        ...statusData,\n        [source.droppableId]: {\n          ...statusData[source.droppableId],\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...statusData[destination.droppableId],\n          items: destinationItems\n        }\n      });\n\n      // Update the status of the moved task in the backend\n      const taskId = movedItem.taskId;\n      const newStatusCategoryId = STATUS_MAPPINGS;\n      axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${STATUS_MAPPINGS[destination.droppableId]}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        console.log('Status updated:', response.data);\n      }).catch(error => console.error(error));\n    }\n  };\n  if (!projectDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n  console.log(projectDetails.title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 flex items-start justify-center h-screen p-4 overflow-x-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg shadow-lg mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white font-bold text-xl\",\n        children: `Project: ${projectDetails.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: Object.entries(statusData).map(([status, data]) => /*#__PURE__*/_jsxDEV(DND_StatusColumn, {\n          status: status,\n          data: data\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/addtask/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-md\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"XA3sn1RqtgowcmpFj+HCbZZ4X7U=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Link","useParams","useLocation","axios","DND_StatusColumn","jsxDEV","_jsxDEV","STATUS_MAPPINGS","Project","_s","_location$state","location","projectDetails","setProjectDetails","state","initialStatusData","name","items","id","statusData","setStatusData","get","process","env","REACT_APP_API_BASE_URL","headers","localStorage","getItem","then","response","data","console","log","tasksByStatus","tasks","reduce","acc","task","statusCategory","statusName","push","catch","error","onDragEnd","result","source","destination","droppableId","sourceItems","Array","from","movedItem","splice","index","destinationItems","taskId","newStatusCategoryId","put","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","Object","entries","map","status","to","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Link, useParams, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport DND_StatusColumn from './DND_StatusColumn';\r\n\r\nconst STATUS_MAPPINGS = {\r\n    'Assigned': 1,\r\n    'In Progress': 2,\r\n    'Completed': 3\r\n};\r\n\r\nexport const Project = () => {\r\n    const location = useLocation();\r\n    const [projectDetails, setProjectDetails] = useState(location.state?.projectDetails);\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const { id } = useParams();\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                setProjectDetails(response.data);\r\n                console.log('API Response:', response.data); // Check the data received from the API\r\n\r\n                const tasksByStatus = response.data.tasks.reduce((acc, task) => {\r\n                    const statusCategory = task.statusCategory.statusName;\r\n                    if (!acc[statusCategory]) {\r\n                        acc[statusCategory] = { name: statusCategory, items: [] };\r\n                    }\r\n                    acc[statusCategory].items.push(task);\r\n                    return acc;\r\n                }, { ...initialStatusData });\r\n\r\n                console.log('Processed Data:', tasksByStatus); // Check the data after processing\r\n                setStatusData(tasksByStatus);\r\n\r\n                // Adding this log to check the current statusData state after updating it\r\n                console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error:', error);\r\n            });\r\n    }, []);\r\n\r\n    const onDragEnd = (result) => {\r\n        const { source, destination } = result;\r\n        if (!destination) return;\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            // Move item to a different droppable\r\n            const sourceItems = Array.from(statusData[source.droppableId].items);\r\n            const [movedItem] = sourceItems.splice(source.index, 1);\r\n            const destinationItems = Array.from(statusData[destination.droppableId].items);\r\n            destinationItems.splice(destination.index, 0, movedItem);\r\n\r\n            setStatusData({\r\n                ...statusData,\r\n                [source.droppableId]: {\r\n                    ...statusData[source.droppableId],\r\n                    items: sourceItems,\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...statusData[destination.droppableId],\r\n                    items: destinationItems,\r\n                },\r\n            });\r\n\r\n            // Update the status of the moved task in the backend\r\n            const taskId = movedItem.taskId;\r\n            const newStatusCategoryId = STATUS_MAPPINGS;\r\n            axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${STATUS_MAPPINGS[destination.droppableId]}`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log('Status updated:', response.data);\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    };\r\n\r\n    if (!projectDetails) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    console.log(projectDetails.title)\r\n\r\n    return (\r\n        <div className=\"bg-gray-900 flex items-start justify-center h-screen p-4 overflow-x-auto\">\r\n            <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg mb-6\">\r\n                <h2 className=\"text-white font-bold text-xl\">{`Project: ${projectDetails.title}`}</h2>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex space-x-4\">\r\n                    {Object.entries(statusData).map(([status, data]) => (\r\n                        <DND_StatusColumn status={status} data={data} key={status} />\r\n                    ))}\r\n                </div>\r\n                <Link to={`/addtask/${id}`}>\r\n                    <button className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-md\">\r\n                        Add Task\r\n                    </button>\r\n                </Link>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}