[{"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\index.js":"1","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\App.js":"2","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\index.js":"3","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddProjectPage\\index.js":"4","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Project.js":"5","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddProjectPage\\AddProjectPage.js":"6","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\TaskPage\\index.js":"7","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddTaskPage\\index.js":"8","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProjectPage\\index.js":"9","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\TaskPage\\TaskPage.js":"10","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddTaskPage\\AddTaskPage.js":"11","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProjectPage\\ProjectPage.js":"12","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\HomePage\\index.js":"13","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\HomePage\\HomePage.js":"14","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Navbar.js":"15","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\LoginPage\\index.js":"16","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\LoginPage\\LoginPage.js":"17","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\AuthService.js":"18","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\context\\AuthContext.js":"19","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\RegisterPage\\index.js":"20","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\RegisterPage\\RegisterPage.js":"21","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\Main.js":"22","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProfilePage\\index.js":"23","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProfilePage\\ProfilePage.js":"24","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Profile.js":"25","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\index.js":"26","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\tokenService.js":"27","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Index.js":"28","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\dnd_StatusColumn.js":"29","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\dnd_Task.js":"30","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\DND_StatusColumn.js":"31","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\DND_Task.js":"32","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useAddProject.js":"33","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useHome.js":"34","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useAddTask.js":"35","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Modal.js":"36","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useTasks.js":"37","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\UnauthorizedPage\\index.js":"38","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\UnauthorizedPage\\Unauthorized.js":"39","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\PageNotFound\\index.js":"40","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\PageNotFound\\PageNotFound.js":"41"},{"size":524,"mtime":1694485973896,"results":"42","hashOfConfig":"43"},{"size":304,"mtime":1694485968914,"results":"44","hashOfConfig":"43"},{"size":233,"mtime":1694727641968,"results":"45","hashOfConfig":"43"},{"size":60,"mtime":1688518824468,"results":"46","hashOfConfig":"43"},{"size":4982,"mtime":1694635350414,"results":"47","hashOfConfig":"43"},{"size":1641,"mtime":1694714879912,"results":"48","hashOfConfig":"43"},{"size":49,"mtime":1688518768966,"results":"49","hashOfConfig":"43"},{"size":54,"mtime":1688518802211,"results":"50","hashOfConfig":"43"},{"size":55,"mtime":1688518746371,"results":"51","hashOfConfig":"43"},{"size":2466,"mtime":1694728174268,"results":"52","hashOfConfig":"43"},{"size":3170,"mtime":1694658829750,"results":"53","hashOfConfig":"43"},{"size":216,"mtime":1694635375294,"results":"54","hashOfConfig":"43"},{"size":49,"mtime":1688518712743,"results":"55","hashOfConfig":"43"},{"size":2571,"mtime":1694714273050,"results":"56","hashOfConfig":"43"},{"size":1873,"mtime":1694728775537,"results":"57","hashOfConfig":"43"},{"size":51,"mtime":1691719432453,"results":"58","hashOfConfig":"43"},{"size":2468,"mtime":1695090298894,"results":"59","hashOfConfig":"43"},{"size":2125,"mtime":1693201262042,"results":"60","hashOfConfig":"43"},{"size":1462,"mtime":1695090443995,"results":"61","hashOfConfig":"43"},{"size":57,"mtime":1692546243010,"results":"62","hashOfConfig":"43"},{"size":4165,"mtime":1694620459699,"results":"63","hashOfConfig":"43"},{"size":2165,"mtime":1694971755550,"results":"64","hashOfConfig":"43"},{"size":55,"mtime":1693155873237,"results":"65","hashOfConfig":"43"},{"size":3719,"mtime":1694972171915,"results":"66","hashOfConfig":"43"},{"size":1990,"mtime":1695090788340,"results":"67","hashOfConfig":"43"},{"size":63,"mtime":1693161764960,"results":"68","hashOfConfig":"43"},{"size":786,"mtime":1694973565449,"results":"69","hashOfConfig":"43"},{"size":201,"mtime":1693855649465,"results":"70","hashOfConfig":"71"},{"size":682,"mtime":1693774476661,"results":"72","hashOfConfig":"71"},{"size":676,"mtime":1693774610798,"results":"73","hashOfConfig":"71"},{"size":709,"mtime":1694486298365,"results":"74","hashOfConfig":"43"},{"size":1341,"mtime":1694488484867,"results":"75","hashOfConfig":"43"},{"size":1060,"mtime":1694620519428,"results":"76","hashOfConfig":"43"},{"size":1906,"mtime":1694711201641,"results":"77","hashOfConfig":"43"},{"size":3249,"mtime":1694478244893,"results":"78","hashOfConfig":"43"},{"size":730,"mtime":1694725118208,"results":"79","hashOfConfig":"43"},{"size":1412,"mtime":1694727632383,"results":"80","hashOfConfig":"43"},{"size":57,"mtime":1694901210081,"results":"81","hashOfConfig":"43"},{"size":632,"mtime":1694970973260,"results":"82","hashOfConfig":"43"},{"size":57,"mtime":1694971605114,"results":"83","hashOfConfig":"43"},{"size":664,"mtime":1694971572376,"results":"84","hashOfConfig":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mnucx2",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njdyce",{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\App.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddProjectPage\\index.js",[],[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Project.js",["219","220","221","222","223"],[],"import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Link, useParams, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport DND_StatusColumn from './DND_StatusColumn';\r\n\r\nconst STATUS_MAPPINGS = {\r\n    'Assigned': 1,\r\n    'In Progress': 2,\r\n    'Completed': 3\r\n};\r\n\r\nexport const Project = () => {\r\n    const location = useLocation();\r\n    const [projectDetails, setProjectDetails] = useState(location.state?.projectDetails);\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const { id } = useParams();\r\n    const [statusData, setStatusData] = useState(initialStatusData);\r\n\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_BASE_URL}/projects/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                setProjectDetails(response.data);\r\n                console.log('API Response:', response.data); // Check the data received from the API\r\n\r\n                const tasksByStatus = response.data.tasks.reduce((acc, task) => {\r\n                    const statusCategory = task.statusCategory.statusName;\r\n                    if (!acc[statusCategory]) {\r\n                        acc[statusCategory] = { name: statusCategory, items: [] };\r\n                    }\r\n                    acc[statusCategory].items.push(task);\r\n                    return acc;\r\n                }, { ...initialStatusData });\r\n\r\n                console.log('Processed Data:', tasksByStatus); // Check the data after processing\r\n                setStatusData(tasksByStatus);\r\n\r\n                // Adding this log to check the current statusData state after updating it\r\n                console.log('Assigned Tasks:', tasksByStatus['Assigned'].items);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error:', error);\r\n            });\r\n    }, []);\r\n\r\n    const onDragEnd = (result) => {\r\n        const { source, destination } = result;\r\n        if (!destination) return;\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            // Move item to a different droppable\r\n            const sourceItems = Array.from(statusData[source.droppableId].items);\r\n            const [movedItem] = sourceItems.splice(source.index, 1);\r\n            const destinationItems = Array.from(statusData[destination.droppableId].items);\r\n            destinationItems.splice(destination.index, 0, movedItem);\r\n\r\n            setStatusData({\r\n                ...statusData,\r\n                [source.droppableId]: {\r\n                    ...statusData[source.droppableId],\r\n                    items: sourceItems,\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...statusData[destination.droppableId],\r\n                    items: destinationItems,\r\n                },\r\n            });\r\n\r\n            // Update the status of the moved task in the backend\r\n            const taskId = movedItem.taskId;\r\n            const newStatusCategoryId = STATUS_MAPPINGS;\r\n            axios.put(`${process.env.REACT_APP_API_BASE_URL}/tasks/${taskId}/status/${STATUS_MAPPINGS[destination.droppableId]}`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log('Status updated:', response.data);\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    };\r\n\r\n    if (!projectDetails) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    console.log(projectDetails.title)\r\n\r\n    return (\r\n        <div className=\"bg-gray-900 flex items-start justify-center h-screen p-4 overflow-x-auto\">\r\n            <div className=\"bg-gray-800 p-4 rounded-lg shadow-lg mb-6\">\r\n                <h2 className=\"text-white font-bold text-xl\">{`Project: ${projectDetails.title}`}</h2>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex space-x-4\">\r\n                    {Object.entries(statusData).map(([status, data]) => (\r\n                        <DND_StatusColumn status={status} data={data} key={status} />\r\n                    ))}\r\n                </div>\r\n                <Link to={`/addtask/${id}`}>\r\n                    <div className='pl-6'>\r\n                        <button className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-3 rounded-md\">\r\n                            Add Task\r\n                        </button>\r\n                    </div>\r\n                </Link>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddProjectPage\\AddProjectPage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\TaskPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddTaskPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProjectPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\TaskPage\\TaskPage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\AddTaskPage\\AddTaskPage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProjectPage\\ProjectPage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\HomePage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\HomePage\\HomePage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Navbar.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\LoginPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\LoginPage\\LoginPage.js",["224","225"],[],"import '../../styles/output.css';\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\n\r\nfunction LoginPage() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { setAuthInfo } = useAuth();\r\n\r\n    let history = useNavigate();\r\n\r\n    const login = async () => {\r\n        try {\r\n            const user = await AuthService.login(email, password);\r\n\r\n            setAuthInfo({\r\n                username: user.username,\r\n                role: user.role,\r\n                userId: user.userId,\r\n                isLoggedIn: true,\r\n            });\r\n            console.log(\"success!!\")\r\n            history('/home')\r\n\r\n        } catch (error) {\r\n            alert(\"Login failed: \" + error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray-900 flex items-center justify-center h-screen\">\r\n                <div className=\"w-96 p-8 bg-gray-800 rounded-lg\">\r\n                    <h1 className=\"text-3xl text-white font-bold mb-6\">Login</h1>\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"text-white\">Email</label>\r\n                            <input type=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3\" />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"text-white\">Password</label>\r\n                            <input type=\"password\" id=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3\" />\r\n                        </div>\r\n\r\n                        <button onClick={login} className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded-md\">\r\n                            Sign In\r\n                        </button>\r\n                        <p className=\"text-white text-right\">\r\n                            <a href=\"#\" className=\"text-blue-500 hover:text-blue-600\">Forgot Password?</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage; \r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\AuthService.js",["226","227"],[],"import axios from \"axios\";\r\nimport { decodeToken, getUserIdFromToken, getUsernameFromToken, getRoleFromToken } from './tokenService';\r\nimport jwtDecode from \"jwt-decode\"; // You can use a library like jwt-decode to decode the JWT\r\n\r\nconst login = async (email, password) => {\r\n    try {\r\n        const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/auth/login`, {\r\n            email,\r\n            password,\r\n        });\r\n\r\n        if (response.data.error) {\r\n            throw new Error(response.data.error);\r\n        }\r\n\r\n        const token = response.data.jwtToken;\r\n\r\n        // Store token in local storage\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        const user = {\r\n            username: getUsernameFromToken(),\r\n            role: getRoleFromToken(),\r\n            userId: getUserIdFromToken()\r\n        };\r\n\r\n        return user;\r\n    } catch (error) {\r\n        console.error(\"Login error\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nconst register = async (username, email, password, role) => {\r\n    const payload = {\r\n        UserName: username,\r\n        Email: email,\r\n        Password: password,\r\n        Role: role\r\n    };\r\n\r\n    try {\r\n        const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/users`, payload);\r\n\r\n        if (response.data.error) {\r\n            throw new Error(response.data.error);\r\n        }\r\n\r\n        const token = response.data.jwtToken;\r\n\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        const user = {\r\n            username: getUsernameFromToken(),\r\n            role: getRoleFromToken(),\r\n            userId: getUserIdFromToken()\r\n        };\r\n\r\n        return user;\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.error(\"Server responded with:\", error.response.data.message);\r\n            console.error(\"Errors:\", error.response.data.errors);\r\n        }\r\n        console.error(\"Registration error\", error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n};\r\n\r\n\r\nexport const AuthService = {\r\n    login,\r\n    logout,\r\n    register\r\n};","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\context\\AuthContext.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\RegisterPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\RegisterPage\\RegisterPage.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\Main.js",["228"],[],"import React from 'react';\r\nimport { Routes, Route, useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from './context/AuthContext';\r\nimport { AuthService } from './services/AuthService';\r\nimport { AddProjectPage } from './pages/AddProjectPage';\r\nimport { AddTaskPage } from './pages/AddTaskPage';\r\nimport { ProjectPage } from './pages/ProjectPage';\r\nimport { TaskPage } from './pages/TaskPage';\r\nimport { HomePage } from './pages/HomePage';\r\nimport { Navbar } from './components';\r\nimport { LoginPage } from './pages/LoginPage';\r\nimport { RegisterPage } from './pages/RegisterPage';\r\nimport { ProfilePage } from './pages/ProfilePage';\r\nimport { Unauthorized } from './pages/UnauthorizedPage';\r\nimport { PageNotFound } from './pages/PageNotFound';\r\n\r\n\r\nconst Main = () => {\r\n    const { setAuthInfo, authState } = useAuth();\r\n    const history = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        AuthService.logout();\r\n        setAuthInfo({\r\n            username: null,\r\n            role: null,\r\n            userId: null,\r\n            isLoggedIn: false\r\n        });\r\n\r\n        history('/login');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar onLogout={handleLogout} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<RegisterPage />} />\r\n                <Route path=\"login\" element={<LoginPage />} />\r\n                <Route path=\"profile\" element={authState.isLoggedIn ? <ProfilePage /> : <Unauthorized />} />\r\n                <Route path=\"project/:id\" element={authState.isLoggedIn ? <ProjectPage /> : <Unauthorized />} />\r\n                <Route path=\"addproject\" element={authState.isLoggedIn ? <AddProjectPage /> : <Unauthorized />} />\r\n                <Route path=\"task/:id\" element={authState.isLoggedIn ? <TaskPage /> : <Unauthorized />} />\r\n                <Route path=\"addtask/:projectId\" element={authState.isLoggedIn ? <AddTaskPage /> : <Unauthorized />} />\r\n                <Route path=\"home\" element={authState.isLoggedIn ? <HomePage /> : <Unauthorized />} />\r\n                <Route path=\"*\" element={<PageNotFound />} />\r\n            </Routes>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProfilePage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\ProfilePage\\ProfilePage.js",["229"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Profile } from '../../components/Profile';\r\nimport { useAuth, setAuthInfo } from '../../context/AuthContext';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ProfilePage() {\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [email1, setEmail1] = useState('');\r\n    const [email2, setEmail2] = useState('');\r\n    const [password1, setPassword1] = useState('');\r\n    const [password2, setPassword2] = useState('');\r\n    const { authState, setAuthInfo } = useAuth();\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        console.log(\"Auth State Updated:\", authState);\r\n    }, [authState]);\r\n\r\n    const handleSubmit = async (field, value1, value2) => {\r\n        if ((field === \"email\" || field === \"password\") && value1 !== value2) {\r\n            alert(\"Values do not match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await Profile.update(field, value1, setAuthInfo);\r\n            alert(\"User information updated\");\r\n            history(\"/home\")\r\n\r\n\r\n        } catch (error) {\r\n            alert(\"Update failed: \" + error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-gray-900 flex items-center justify-center h-screen\">\r\n            <div className=\"w-96 p-8 bg-gray-800 rounded-lg\">\r\n                <h1 className=\"text-3xl text-white font-bold mb-6\">Profile</h1>\r\n\r\n                <h2 className=\"text-xl text-white mb-4\">{authState.username}</h2>\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label htmlFor=\"username\" className=\"text-white\">New Username</label>\r\n                        <input type=\"text\" id=\"username\" value={newUsername} onChange={e => setNewUsername(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3\" />\r\n                        <button onClick={() => handleSubmit('username', newUsername)} className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded-md mt-2\">Update Username</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"email1\" className=\"text-white\">New Email</label>\r\n                        <input type=\"email\" id=\"email1\" value={email1} onChange={e => setEmail1(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3\" />\r\n                        <input type=\"email\" id=\"email2\" placeholder=\"Confirm Email\" value={email2} onChange={e => setEmail2(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3 mt-2\" />\r\n                        <button onClick={() => handleSubmit('email', email1, email2)} className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded-md mt-2\">Update Email</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"password1\" className=\"text-white\">New Password</label>\r\n                        <input type=\"password\" id=\"password1\" value={password1} onChange={e => setPassword1(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3\" />\r\n                        <input type=\"password\" id=\"password2\" placeholder=\"Confirm Password\" value={password2} onChange={e => setPassword2(e.target.value)} className=\"w-full bg-gray-700 text-white rounded-md py-2 px-3 mt-2\" />\r\n                        <button onClick={() => handleSubmit('password', password1, password2)} className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded-md mt-2\">Update Password</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Profile.js",["230","231"],[],"import axios from \"axios\";\r\nimport { getUserIdFromToken, decodeToken } from '../services';\r\nimport { useAuth, setAuthInfo } from '../context/AuthContext';\r\n\r\nexport const Profile = {\r\n    async update(field, value, setAuthInfo) {\r\n        const userId = getUserIdFromToken();\r\n\r\n        if (!userId) {\r\n            throw new Error(\"User ID not found in token.\");\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(\r\n                `${process.env.REACT_APP_API_BASE_URL}/users/${userId}`,\r\n                { [field]: value },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (response.data.error) {\r\n                throw new Error(response.data.error);\r\n            }\r\n\r\n            // Check if the server response contains a new token\r\n            if (response.data.token) {\r\n                // Store the new token in local storage\r\n                localStorage.setItem('token', response.data.token);\r\n                // Decode the new token to get updated user information\r\n                const updatedUser = decodeToken(response.data.token);\r\n                console.log(updatedUser)\r\n\r\n                // Update the app state with the new user information\r\n                setAuthInfo(prevState => ({\r\n                    ...prevState,\r\n                    username: updatedUser.username\r\n                }));\r\n            } else {\r\n                const updatedUser = decodeToken(response.data.token);\r\n                setAuthInfo(prevState => ({\r\n                    ...prevState,\r\n                    username: updatedUser.username\r\n                }));\r\n\r\n            }\r\n\r\n            console.log('Server Response:', response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Update error\", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\services\\tokenService.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\dnd_StatusColumn.js",["232"],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\dnd_Task.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\DND_StatusColumn.js",["233"],[],"// StatusColumn.js\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport DND_Task from './DND_Task';\r\n\r\nconst DND_StatusColumn = ({ status, data }) => (\r\n  <Droppable droppableId={status} key={status}>\r\n    {(provided) => (\r\n      <div\r\n        ref={provided.innerRef}\r\n        {...provided.droppableProps}\r\n        className=\"w-64 p-4 mx-2 bg-gray-800 rounded-lg\"\r\n\r\n      >\r\n        <h3 className=\"text-3xl text-white font-bold mb-6\">{data.name}</h3>\r\n        {data.items.map((item, index) => (\r\n          <DND_Task task={item} index={index} status={status} key={item.taskId} />\r\n        ))}\r\n        {provided.placeholder}\r\n      </div>\r\n    )}\r\n  </Droppable>\r\n);\r\n\r\nexport default DND_StatusColumn;\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\DND_Task.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useAddProject.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useHome.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useAddTask.js",["234","235","236"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom'; // Import useHistory for redirecting after the post request\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport const useAddTask = () => {\r\n    const { authState } = useAuth();\r\n    const [priority, setPriority] = useState('normal');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [projectId, setProjectId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const navigate = useNavigate();\r\n    const userId = authState.userId;\r\n\r\n\r\n    const params = useParams();\r\n\r\n    const priorityLevels = {\r\n        'normal': 1,\r\n        'medium': 2,\r\n        'urgent': 3\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchUsersAndProjects = async () => {\r\n            try {\r\n                const [usersResponse, projectsResponse] = await Promise.all([\r\n                    axios.get(`${process.env.REACT_APP_API_BASE_URL}/users`, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                        }\r\n                    }),\r\n                    axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects`, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                        }\r\n                    })\r\n                ]);\r\n\r\n                setUsers(usersResponse.data);\r\n                setSelectedUser(usersResponse.data[0]);\r\n                setProjectId(params.projectId);\r\n            } catch (error) {\r\n                console.error('There was an error!', error);\r\n            }\r\n        };\r\n\r\n        fetchUsersAndProjects();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = {\r\n            Title: title,\r\n            TaskDetails: description,\r\n            Deadline: dueDate,\r\n            Priority: priorityLevels[priority],\r\n            AssignedUserId: selectedUser?.userId,\r\n            UserId: userId,\r\n            ProjectId: projectId\r\n        };\r\n\r\n\r\n        axios\r\n            .post(`${process.env.REACT_APP_API_BASE_URL}/tasks`, data\r\n                , {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                })\r\n            .then((response) => {\r\n                navigate(`/project/${projectId}`);\r\n\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                } else {\r\n                    console.log('Error', error.message);\r\n                }\r\n            })\r\n    };\r\n\r\n\r\n    return {\r\n        priority, setPriority, dueDate, setDueDate, title, setTitle, description, setDescription, users, selectedUser, setSelectedUser, handleSubmit\r\n    };\r\n\r\n};\r\n\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\Modal.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\components\\useTasks.js",["237"],[],"import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const useTask = () => {\r\n    const { id } = useParams();\r\n    const [task, setTask] = useState({});\r\n    const [showModal, setShowModal] = useState(false);\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/tasks/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then((response) => {\r\n                setTask(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching task:', error);\r\n            });\r\n    }, []);\r\n\r\n    const deleteTask = () => {\r\n        axios.delete(`${process.env.REACT_APP_API_BASE_URL}/tasks/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                history(-1); // Navigate back after successful delete\r\n            })\r\n            .catch(error => {\r\n                console.error('Error deleting the task:', error);\r\n            });\r\n    }\r\n\r\n    return {\r\n        task,\r\n        showModal,\r\n        setShowModal,\r\n        deleteTask\r\n    };\r\n}\r\n\r\n","C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\UnauthorizedPage\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\UnauthorizedPage\\Unauthorized.js",[],[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\PageNotFound\\index.js",[],[],"C:\\Users\\sandi\\TaskManagment-Front end\\task-managment\\src\\pages\\PageNotFound\\PageNotFound.js",[],[],{"ruleId":"238","severity":1,"message":"239","line":2,"column":27,"nodeType":"240","messageId":"241","endLine":2,"endColumn":36},{"ruleId":"238","severity":1,"message":"242","line":2,"column":38,"nodeType":"240","messageId":"241","endLine":2,"endColumn":47},{"ruleId":"243","severity":1,"message":"244","line":56,"column":8,"nodeType":"245","endLine":56,"endColumn":10,"suggestions":"246"},{"ruleId":"238","severity":1,"message":"247","line":83,"column":19,"nodeType":"240","messageId":"241","endLine":83,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":110,"column":25,"nodeType":"250","messageId":"251","endLine":110,"endColumn":86},{"ruleId":"238","severity":1,"message":"252","line":2,"column":27,"nodeType":"240","messageId":"241","endLine":2,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":53,"column":29,"nodeType":"250","endLine":53,"endColumn":87},{"ruleId":"238","severity":1,"message":"255","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":21},{"ruleId":"238","severity":1,"message":"256","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":17},{"ruleId":"238","severity":1,"message":"257","line":2,"column":38,"nodeType":"240","messageId":"241","endLine":2,"endColumn":42},{"ruleId":"238","severity":1,"message":"258","line":3,"column":19,"nodeType":"240","messageId":"241","endLine":3,"endColumn":30},{"ruleId":"238","severity":1,"message":"259","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":17},{"ruleId":"238","severity":1,"message":"258","line":3,"column":19,"nodeType":"240","messageId":"241","endLine":3,"endColumn":30},{"ruleId":"238","severity":1,"message":"260","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"261","line":16,"column":11,"nodeType":"250","messageId":"251","endLine":16,"endColumn":83},{"ruleId":"238","severity":1,"message":"262","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"238","severity":1,"message":"263","line":30,"column":39,"nodeType":"240","messageId":"241","endLine":30,"endColumn":55},{"ruleId":"243","severity":1,"message":"264","line":52,"column":8,"nodeType":"245","endLine":52,"endColumn":10,"suggestions":"265"},{"ruleId":"243","severity":1,"message":"266","line":24,"column":8,"nodeType":"245","endLine":24,"endColumn":10,"suggestions":"267"},"no-unused-vars","'Droppable' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'initialStatusData'. Either include them or remove the dependency array.","ArrayExpression",["268"],"'newStatusCategoryId' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component DND_StatusColumn must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'decodeToken' is defined but never used.","'jwtDecode' is defined but never used.","'Link' is defined but never used.","'setAuthInfo' is defined but never used.","'useAuth' is defined but never used.","'dnd_Task' is defined but never used.","Imported JSX component DND_Task must be in PascalCase or SCREAMING_SNAKE_CASE","'React' is defined but never used.","'projectsResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.projectId'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["270"],{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [id, initialStatusData]",{"range":"277","text":"278"},"Update the dependencies array to be: [params.projectId]",{"range":"279","text":"280"},"Update the dependencies array to be: [id]",{"range":"281","text":"282"},[2202,2204],"[id, initialStatusData]",[1940,1942],"[params.projectId]",[819,821],"[id]"]