{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Project = () => {\n  _s();\n  const initialStatusData = {\n    'Assigned': {\n      name: 'Assigned',\n      items: []\n    },\n    'In Progress': {\n      name: 'In Progress',\n      items: []\n    },\n    'Completed': {\n      name: 'Completed',\n      items: []\n    }\n  };\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [statusData, setStatusData] = useState({});\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects`).then(response => {\n      setProject(response.data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/tasks`).then(response => {\n      const tasksByStatus = response.data.reduce((acc, task) => {\n        acc[task.status].items.push(task);\n        return acc;\n      }, {\n        ...statusData\n      });\n      setStatusData(tasksByStatus);\n    }).catch(error => {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        console.log('Response Error: ', error.response.data);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log('Request Error: ', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error: ', error.message);\n      }\n    });\n  }, []);\n  const onDragEnd = result => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: Object.entries(statusData).map((_ref, index) => {\n        let [status, data] = _ref;\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              margin: '0 10px',\n              backgroundColor: 'white',\n              width: 250\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Project, \"qhLBcWUQvhjv0yupnZ6Y+4LJQLk=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","_s","initialStatusData","name","items","id","project","setProject","statusData","setStatusData","get","process","env","REACT_APP_API_BASE_URL","then","response","data","catch","error","console","tasksByStatus","reduce","acc","task","status","push","log","request","message","onDragEnd","result","children","Object","entries","map","_ref","index","droppableId","provided","ref","innerRef","droppableProps","style","margin","backgroundColor","width","fileName","_jsxFileName","lineNumber","columnNumber","item","draggableId","toString","draggableProps","dragHandleProps","content","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const Project = () => {\r\n\r\n    const initialStatusData = {\r\n        'Assigned': { name: 'Assigned', items: [] },\r\n        'In Progress': { name: 'In Progress', items: [] },\r\n        'Completed': { name: 'Completed', items: [] },\r\n    };\r\n\r\n    const { id } = useParams();\r\n    const [project, setProject] = useState(null);\r\n    const [statusData, setStatusData] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/projects`)\r\n            .then(response => {\r\n                setProject(response.data);\r\n\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, [id]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/tasks`)\r\n            .then(response => {\r\n                const tasksByStatus = response.data.reduce((acc, task) => {\r\n                    acc[task.status].items.push(task);\r\n                    return acc;\r\n                }, { ...statusData });\r\n                setStatusData(tasksByStatus);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    console.log('Response Error: ', error.response.data);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.log('Request Error: ', error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.log('Error: ', error.message);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                {Object.entries(statusData).map(([status, data], index) => (\r\n                    <Droppable droppableId={status} key={status}>\r\n                        {(provided) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                style={{ margin: '0 10px', backgroundColor: 'white', width: 250 }}\r\n                            >\r\n                                <h3>{data.name}</h3>\r\n                                {data.items.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                ))}\r\n            </DragDropContext>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}