{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [authState, setAuthState] = useState({\n    username: null,\n    role: null,\n    userId: null,\n    isLoggedIn: false\n  });\n\n  // To make sure we are not creating a new function every render\n  const setAuthInfo = useCallback(data => {\n    setAuthState(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"FIJGMjTw/UnOH3N9mBms4z8Sh2w=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('context is null');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","authState","setAuthState","username","role","userId","isLoggedIn","setAuthInfo","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useCallback } from 'react';\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [authState, setAuthState] = useState({\r\n        username: null,\r\n        role: null,\r\n        userId: null,\r\n        isLoggedIn: false\r\n    });\r\n\r\n    // To make sure we are not creating a new function every render\r\n    const setAuthInfo = useCallback((data) => {\r\n        setAuthState(data);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ authState, setAuthInfo }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('context is null');\r\n    }\r\n    return context;\r\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAGnC,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACvCY,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGd,WAAW,CAAEe,IAAI,IAAK;IACtCN,YAAY,CAACM,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAET,SAAS;MAAEM;IAAY,CAAE;IAAAP,QAAA,EACnDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAf,EAAA,CApBaF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAqBzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG1B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACsB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}