{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandi\\\\TaskManagment-Front end\\\\task-managment\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { useAuth } from './context/AuthContext';\nimport { AuthService } from './services/AuthService';\nimport { AddProjectPage } from './pages/AddProjectPage';\nimport { AddTaskPage } from './pages/AddTaskPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { TaskPage } from './pages/TaskPage';\nimport { HomePage } from './pages/HomePage';\nimport { Navbar } from './components';\nimport { LoginPage } from './pages/LoginPage';\nimport { RegisterPage } from './pages/RegisterPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const {\n    setAuthInfo\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    AuthService.logout();\n    setAuthInfo({\n      username: null,\n      role: null,\n      userId: null,\n      isLoggedIn: false\n    });\n    navigate('/');\n  };\n  useEffect(() => {\n    // This effect runs whenever the `authInfo` state changes.\n    if (!authInfo.isLoggedIn) {\n      // Any logic you want to run when the user logs out.\n      // For example, you might clear other parts of the state, \n      // remove cached data, or make other UI adjustments.\n    }\n  }, [authInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"project/:id\",\n        element: /*#__PURE__*/_jsxDEV(ProjectPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"addproject\",\n        element: /*#__PURE__*/_jsxDEV(AddProjectPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"task/:id\",\n        element: /*#__PURE__*/_jsxDEV(TaskPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"addtask\",\n        element: /*#__PURE__*/_jsxDEV(AddTaskPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"r1K1sTq5u9LvK7823hH13tGtksM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","Routes","Route","useNavigate","useAuth","AuthService","AddProjectPage","AddTaskPage","ProjectPage","TaskPage","HomePage","Navbar","LoginPage","RegisterPage","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","setAuthInfo","navigate","handleLogout","logout","username","role","userId","isLoggedIn","authInfo","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/sandi/TaskManagment-Front end/task-managment/src/Main.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from './context/AuthContext';\r\nimport { AuthService } from './services/AuthService';\r\nimport { AddProjectPage } from './pages/AddProjectPage';\r\nimport { AddTaskPage } from './pages/AddTaskPage';\r\nimport { ProjectPage } from './pages/ProjectPage';\r\nimport { TaskPage } from './pages/TaskPage';\r\nimport { HomePage } from './pages/HomePage';\r\nimport { Navbar } from './components';\r\nimport { LoginPage } from './pages/LoginPage';\r\nimport { RegisterPage } from './pages/RegisterPage';\r\n\r\nconst Main = () => {\r\n    const { setAuthInfo } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        AuthService.logout();\r\n        setAuthInfo({\r\n            username: null,\r\n            role: null,\r\n            userId: null,\r\n            isLoggedIn: false\r\n        });\r\n\r\n        navigate('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        // This effect runs whenever the `authInfo` state changes.\r\n        if (!authInfo.isLoggedIn) {\r\n            // Any logic you want to run when the user logs out.\r\n            // For example, you might clear other parts of the state, \r\n            // remove cached data, or make other UI adjustments.\r\n        }\r\n    }, [authInfo]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar onLogout={handleLogout} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"project/:id\" element={<ProjectPage />} />\r\n                <Route path=\"addproject\" element={<AddProjectPage />} />\r\n                <Route path=\"task/:id\" element={<TaskPage />} />\r\n                <Route path=\"addtask\" element={<AddTaskPage />} />\r\n                <Route path=\"login\" element={<LoginPage />} />\r\n                <Route path=\"register\" element={<RegisterPage />} />\r\n            </Routes>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}